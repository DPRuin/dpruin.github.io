<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>DPRuin</title>
  <subtitle>求知若饥，虚心若愚</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://dpruin.github.io/"/>
  <updated>2017-01-13T03:29:24.000Z</updated>
  <id>http://dpruin.github.io/</id>
  
  <author>
    <name>DPRuin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Xcode8上传AppStore 构建版本不显示问题</title>
    <link href="http://dpruin.github.io/2017/01/13/appstore_buildversion/"/>
    <id>http://dpruin.github.io/2017/01/13/appstore_buildversion/</id>
    <published>2017-01-13T02:30:06.000Z</published>
    <updated>2017-01-13T03:29:24.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Xcode8上传AppStore-构建版本不显示问题"><a href="#Xcode8上传AppStore-构建版本不显示问题" class="headerlink" title="Xcode8上传AppStore 构建版本不显示问题"></a>Xcode8上传AppStore 构建版本不显示问题</h3><h4 id="问题经过"><a href="#问题经过" class="headerlink" title="问题经过"></a>问题经过</h4><p>使用xcode8打包上传公司的app，app上架–&gt;Archive–&gt;validate–&gt;upload，并且SUCCESSFUL了。官网选项构建版本时蛋疼的事情就来了，构建版本不显示，一致处于如下状态<br><img src="/images/appstore_buildversion_1.png" alt=""></p>
<p>然后修改版本，重新上传，活动–所有构建版本，显示构建的版本正在处理，过一会又消失了，又不显示此构建版本<br><img src="/images/appstore_buildversion_2.png" alt=""></p>
<p>提交了多次，等了一宿，第二天构建版本还是没有显示</p>
<h4 id="参考分析"><a href="#参考分析" class="headerlink" title="参考分析"></a>参考分析</h4><p>参考资料发现，从iOS10开始,苹果更加注重对用于隐私的保护,app里边如果需要访问用户隐私,必须要做隐私权限配置<br><img src="/images/appstore_buildversion_3.png" alt=""></p>
<h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><ul>
<li>麦克风权限：Privacy - Microphone Usage Description 是否允许此App使用你的麦克风？</li>
<li>相机权限： Privacy - Camera Usage Description 是否允许此App使用你的相机？</li>
<li>相册权限： Privacy - Photo Library Usage Description 是否允许此App访问你的媒体资料库?</li>
<li>通讯录权限： Privacy - Contacts Usage Description 是否允许此App访问你的通讯录？</li>
<li>蓝牙权限：Privacy - Bluetooth Peripheral Usage Description 是否许允此App使用蓝牙？</li>
<li>语音转文字权限：Privacy - Speech Recognition Usage Description 是否允许此App使用语音识别？</li>
<li>日历权限：Privacy - Calendars Usage Description 是否允许此App使用日历？</li>
<li>定位权限：Privacy - Location When In Use Usage Description 我们需要通过您的地理位置信息获取您周边的相关数据</li>
<li>定位权限: Privacy - Location Always Usage Description 我们需要通过您的地理位置信息获取您周边的相关数据</li>
</ul>
<p>其中麦克风，相机，相册三项必须添加，不然构建版本还是不显示!!!!</p>
<p>添加隐私权限配置后，重新上传，过一会儿，构建版本就出现了<br><img src="/images/appstore_buildversion_4.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Xcode8上传AppStore-构建版本不显示问题&quot;&gt;&lt;a href=&quot;#Xcode8上传AppStore-构建版本不显示问题&quot; class=&quot;headerlink&quot; title=&quot;Xcode8上传AppStore 构建版本不显示问题&quot;&gt;&lt;/a&gt;Xcode8上传
    
    </summary>
    
    
      <category term="Error" scheme="http://dpruin.github.io/tags/Error/"/>
    
      <category term="Xcode" scheme="http://dpruin.github.io/tags/Xcode/"/>
    
      <category term="AppStore" scheme="http://dpruin.github.io/tags/AppStore/"/>
    
  </entry>
  
  <entry>
    <title>Cocopods_Expected identifier or &quot;(&quot;    ,Expected a type</title>
    <link href="http://dpruin.github.io/2016/12/20/Cocopods_Expected%20identifier/"/>
    <id>http://dpruin.github.io/2016/12/20/Cocopods_Expected identifier/</id>
    <published>2016-12-20T06:15:21.000Z</published>
    <updated>2016-12-20T06:23:42.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Cocopods-Expected-identifier-or-“-“-Expected-a-type"><a href="#Cocopods-Expected-identifier-or-“-“-Expected-a-type" class="headerlink" title="Cocopods_Expected identifier or “(“    ,Expected a type"></a>Cocopods_Expected identifier or “(“    ,Expected a type</h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>Parse Issue：Expected identifier or “(“    ,Expected a type<br><img src="/images/cocopods_1.png" alt=""></p>
<h4 id="分析与参考"><a href="#分析与参考" class="headerlink" title="分析与参考"></a>分析与参考</h4><p>参考： <a href="http://www.egeek.me/2013/01/26/note-about-building-cocoapods-powered-ios-projects/" target="_blank" rel="external">http://www.egeek.me/2013/01/26/note-about-building-cocoapods-powered-ios-projects/</a><br>参考以上windows 和OSX系统不同,因 rsa.h文件未正常引入导致，还和cocopods有关系</p>
<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4><p>cd到项目目录 执行pod update操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">youbaobaodeMac-mini:~ youbaobao$ pod --version</div><div class="line">1.0.1</div><div class="line">youbaobaodeMac-mini:~ youbaobao$ cd ......</div><div class="line">youbaobaodeMac-mini:sourceCode youbaobao$ pod update</div><div class="line">Update all pods</div><div class="line">Re-creating CocoaPods due to major version update.</div><div class="line">Setting up CocoaPods master repo</div><div class="line">[!] Unable to add a source with url `https://github.com/CocoaPods/Specs.git` named `master-1`.</div><div class="line">You can try adding it manually in `~/.cocoapods/repos` or via `pod repo add`.</div><div class="line">youbaobaodeMac-mini:sourceCode youbaobao$</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Cocopods-Expected-identifier-or-“-“-Expected-a-type&quot;&gt;&lt;a href=&quot;#Cocopods-Expected-identifier-or-“-“-Expected-a-type&quot; class=&quot;headerlin
    
    </summary>
    
    
      <category term="bug" scheme="http://dpruin.github.io/tags/bug/"/>
    
      <category term="Cocopods" scheme="http://dpruin.github.io/tags/Cocopods/"/>
    
      <category term="Xcode" scheme="http://dpruin.github.io/tags/Xcode/"/>
    
  </entry>
  
  <entry>
    <title>AppStore上架报ERROR ITMS-90535</title>
    <link href="http://dpruin.github.io/2016/10/21/Archive_ERRORITEMS-90535/"/>
    <id>http://dpruin.github.io/2016/10/21/Archive_ERRORITEMS-90535/</id>
    <published>2016-10-21T13:30:06.000Z</published>
    <updated>2016-10-24T11:43:53.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="AppStore上架报ERROR-ITMS-90535错误"><a href="#AppStore上架报ERROR-ITMS-90535错误" class="headerlink" title="AppStore上架报ERROR ITMS-90535错误"></a>AppStore上架报ERROR ITMS-90535错误</h3><h4 id="错误经过"><a href="#错误经过" class="headerlink" title="错误经过"></a>错误经过</h4><p>使用xcode7打包上传公司的app，app上架–&gt;Archive–&gt;validate过后，并且SUCCESSFUL了。然后开始上传到AppStore时，出现以下错误</p>
<ul>
<li><p>This action could not be completed. Try again<br><img src="/images/Archive_ERRORITEMS-90535_1.png" alt="error1"></p>
</li>
<li><p>This action could not be completed. Try again.(-22421)<br><img src="/images/Archive_ERRORITEMS-90535_2.png" alt="error2"></p>
</li>
<li><p>ERROR ITMS-90535错误<br><img src="/images/Archive_ERRORITEMS-90535_3.png" alt="error3"></p>
</li>
</ul>
<h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><ul>
<li><p>“This action could not be completed. Try again”报错是苹果服务器的原因， 再试一次就好了。我是重复了2次就好了，换了时间段重新上传的就成功了</p>
</li>
<li><p>“ERROR ITMS-90535”根据报错的信息是EaseUIResource.Bundle文件出错</p>
</li>
</ul>
<h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>找到相应的bundle包，打开plist文件，删除CFBundleExecutable即可 CFBundleExecutable 在info.plist文件中显示为Executable file<br><img src="/images/Archive_ERRORITEMS-90535_4.png" alt="solve"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;AppStore上架报ERROR-ITMS-90535错误&quot;&gt;&lt;a href=&quot;#AppStore上架报ERROR-ITMS-90535错误&quot; class=&quot;headerlink&quot; title=&quot;AppStore上架报ERROR ITMS-90535错误&quot;&gt;&lt;/a
    
    </summary>
    
    
      <category term="Archive" scheme="http://dpruin.github.io/tags/Archive/"/>
    
      <category term="Error" scheme="http://dpruin.github.io/tags/Error/"/>
    
  </entry>
  
  <entry>
    <title>iOS UI测试</title>
    <link href="http://dpruin.github.io/2016/10/20/UITesting/"/>
    <id>http://dpruin.github.io/2016/10/20/UITesting/</id>
    <published>2016-10-20T08:17:51.000Z</published>
    <updated>2016-11-11T01:51:29.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="iOS-UI测试"><a href="#iOS-UI测试" class="headerlink" title="iOS UI测试"></a>iOS UI测试</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul>
<li>UITesting 和 Accessibility</li>
<li>测试app的功能和UI界面是否正确, UI测试可以省去人为直接操作app进行测试。</li>
</ul>
<h4 id="创建UI测试"><a href="#创建UI测试" class="headerlink" title="创建UI测试"></a>创建UI测试</h4><ul>
<li>File——New——Target——iOS UI Testing Bundle</li>
<li>也可以如下图操作<br><img src="/images/UITesting_1.png" alt=""></li>
</ul>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><ul>
<li>前提须写的代码：设置UI控件accessibilityIdentifier属性</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">- (void)viewDidLoad &#123;</div><div class="line">    [super viewDidLoad];</div><div class="line">    self.userTextField.accessibilityIdentifier = @&quot;userTextField&quot;;</div><div class="line">    self.passwordTextField.accessibilityIdentifier = @&quot;passwordTextField&quot;;</div><div class="line">    // 辅助标识</div><div class="line">    self.loginBtn.accessibilityIdentifier = @&quot;login&quot;;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>测试样例</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">- (void)testEmptyUserNameAndPassword &#123;</div><div class="line">    </div><div class="line">    // XCUIApplication app对象代理 继承自XCUIElement</div><div class="line">    XCUIApplication *app = [[XCUIApplication alloc] init];</div><div class="line">    [app.buttons[@&quot;login&quot;] tap];</div><div class="line">    </div><div class="line">    // XCUIElement UI元素的代理</div><div class="line">    XCUIElement *label = app.alerts.staticTexts[@&quot;Empty username/password&quot;];</div><div class="line">    </div><div class="line">    // XCUIElementQuery 查询UI元素的类</div><div class="line">    XCUIElementQuery *alerts = app.alerts;</div><div class="line">    </div><div class="line">    NSPredicate *alertCount = [NSPredicate predicateWithFormat:@&quot;count == 1&quot;]; // XCUIElementQuery有count属性 ，元素数量</div><div class="line">    NSPredicate *labelExist = [NSPredicate predicateWithFormat:@&quot;exists == 1&quot;]; // XCUIElement有exists属性，是否存在</div><div class="line">    </div><div class="line">    [self expectationForPredicate:alertCount evaluatedWithObject:alerts handler:nil];</div><div class="line">    [self expectationForPredicate:labelExist evaluatedWithObject:label handler:nil];</div><div class="line">    </div><div class="line">    [self waitForExpectationsWithTimeout:5 handler: nil];</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="UI行为录制"><a href="#UI行为录制" class="headerlink" title="UI行为录制"></a>UI行为录制</h4><ul>
<li>将输入光标放在方法实现中，并点击工具栏上的录制按钮，就可以进行实时录制了<br><img src="/images/UITesting_2.png" alt=""></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;iOS-UI测试&quot;&gt;&lt;a href=&quot;#iOS-UI测试&quot; class=&quot;headerlink&quot; title=&quot;iOS UI测试&quot;&gt;&lt;/a&gt;iOS UI测试&lt;/h3&gt;&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
    
      <category term="UITesting" scheme="http://dpruin.github.io/tags/UITesting/"/>
    
      <category term="测试" scheme="http://dpruin.github.io/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Swift3.0相对于2.3语法的一些变化</title>
    <link href="http://dpruin.github.io/2016/10/18/Swift3.0WithSwift2.3Changes/"/>
    <id>http://dpruin.github.io/2016/10/18/Swift3.0WithSwift2.3Changes/</id>
    <published>2016-10-18T13:37:58.000Z</published>
    <updated>2016-11-14T09:50:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Swift3-0相对于2-3语法的一些变化"><a href="#Swift3-0相对于2-3语法的一些变化" class="headerlink" title="Swift3.0相对于2.3语法的一些变化"></a>Swift3.0相对于2.3语法的一些变化</h3><h4 id="颜色"><a href="#颜色" class="headerlink" title="颜色"></a>颜色</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">// swift 2.3</div><div class="line">view.backgroundColor = UIColor.redColor()</div><div class="line"></div><div class="line">// swift 3.0</div><div class="line">view.backgroundColor = UIColor.red</div></pre></td></tr></table></figure>
<h4 id="swift-3-0-删掉了-–"><a href="#swift-3-0-删掉了-–" class="headerlink" title="swift 3.0 删掉了++ –"></a>swift 3.0 删掉了++ –</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">// swift 2.3</div><div class="line">var a = 0</div><div class="line">a++</div><div class="line">a--</div><div class="line"></div><div class="line">// swift 3.0 删掉了++ -- </div><div class="line">var a = 0</div><div class="line">a += 1</div><div class="line">a -= 1</div></pre></td></tr></table></figure>
<h4 id="Swift-3-0-任意对象AnyObject-简化为Any"><a href="#Swift-3-0-任意对象AnyObject-简化为Any" class="headerlink" title="Swift 3.0 任意对象AnyObject 简化为Any"></a>Swift 3.0 任意对象AnyObject 简化为Any</h4><h4 id="inout关键字放在参数名称的后面"><a href="#inout关键字放在参数名称的后面" class="headerlink" title="inout关键字放在参数名称的后面"></a>inout关键字放在参数名称的后面</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">// swift 2.3</div><div class="line">func swap1(inout a : Int, inout b : Int) &#123;</div><div class="line">    let temp = a</div><div class="line">    a = b</div><div class="line">    b = temp</div><div class="line"></div><div class="line">    print(&quot;a:\(a), b:\(b)&quot;)</div><div class="line">&#125;</div><div class="line"></div><div class="line">// swift 3.0 inout关键字放在参数名称的后面</div><div class="line">func swap( a: inout Int, b: inout Int) &#123;</div><div class="line">    let temp = a</div><div class="line">    a = b</div><div class="line">    b = temp</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="闭包-和-GCD"><a href="#闭包-和-GCD" class="headerlink" title="闭包 和 GCD"></a>闭包 和 GCD</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">// swift 2.3</div><div class="line">class HttpTool: NSObject &#123;</div><div class="line"></div><div class="line">    func loadRequest(callBack : ()-&gt;())&#123;</div><div class="line">        dispatch_async(dispatch_get_global_queue(0, 0)) &#123; () -&gt; Void in</div><div class="line">            print(&quot;加载数据&quot;, [NSThread.currentThread()])</div><div class="line"></div><div class="line">             dispatch_async(dispatch_get_main_queue(), &#123; () -&gt; Void in</div><div class="line">                callBack()</div><div class="line">             &#125;)</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">    override func touchesBegan(touches: Set&lt;UITouch&gt;, withEvent event: UIEvent?) &#123;</div><div class="line">        // 网络请求</div><div class="line">        httpTool.loadRequest (&#123; () -&gt; () in</div><div class="line">            print(&quot;回到主线程&quot;, NSThread.currentThread());</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">// swift 3.0</div><div class="line">class HttpTool : NSObject &#123;</div><div class="line">    </div><div class="line">    func loadRequest(callBack:  @escaping ()-&gt;()) &#123;</div><div class="line">        </div><div class="line">        DispatchQueue.global().async &#123;</div><div class="line">            print(&quot;加载数据&quot;, Thread.current)</div><div class="line">            DispatchQueue.main.async &#123;</div><div class="line">                callBack()</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">HttpTool().loadRequest &#123;</div><div class="line">    print(&quot;HH&quot;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="swift3-0-去掉了lazy关键字"><a href="#swift3-0-去掉了lazy关键字" class="headerlink" title="swift3.0 去掉了lazy关键字"></a>swift3.0 去掉了lazy关键字</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">// swift 2.3</div><div class="line">    lazy var array : [String] = &#123;</div><div class="line">        () -&gt; [String] in</div><div class="line">        return [&quot;why&quot;, &quot;lmj&quot;, &quot;lnj&quot;]</div><div class="line">    &#125;()</div><div class="line">    </div><div class="line">// swift 3.0 去掉了lazy关键字</div><div class="line">var array : [String] = &#123;</div><div class="line">    </div><div class="line">    return [&quot;lisi&quot;, &quot;zhangsan&quot;, &quot;wangmazi&quot;];</div><div class="line">    </div><div class="line">&#125;()</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Swift3-0相对于2-3语法的一些变化&quot;&gt;&lt;a href=&quot;#Swift3-0相对于2-3语法的一些变化&quot; class=&quot;headerlink&quot; title=&quot;Swift3.0相对于2.3语法的一些变化&quot;&gt;&lt;/a&gt;Swift3.0相对于2.3语法的一些变化&lt;/
    
    </summary>
    
    
      <category term="Swift" scheme="http://dpruin.github.io/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>Xcode8_Warning_Couldn’t communicate with a helper application.</title>
    <link href="http://dpruin.github.io/2016/10/18/Xcode_Warning_commit/"/>
    <id>http://dpruin.github.io/2016/10/18/Xcode_Warning_commit/</id>
    <published>2016-10-18T13:37:58.000Z</published>
    <updated>2016-10-26T03:43:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Xcode8-Warning-Couldn’t-communicate-with-a-helper-application"><a href="#Xcode8-Warning-Couldn’t-communicate-with-a-helper-application" class="headerlink" title="Xcode8_Warning_Couldn’t communicate with a helper application."></a>Xcode8_Warning_Couldn’t communicate with a helper application.</h3><h4 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h4><ul>
<li>升级Xcode8后提交代码，执行commit操作，出现以下警告<br><img src="/images/commit_warning.png" alt="commit_warning"></li>
<li>升级Xcode8后shift + common + n 创建project，出现以下警告<br><img src="/images/newproject_warning.png" alt="newproject_warning"></li>
</ul>
<h4 id="分析原因"><a href="#分析原因" class="headerlink" title="分析原因"></a>分析原因</h4><p>Couldn’t communicate with a helper application. 无法与辅助应用程序通信。mac里git需要重新配置。新建project，xcode提醒开发者不能执行commit操作</p>
<h4 id="解决问题"><a href="#解决问题" class="headerlink" title="解决问题"></a>解决问题</h4><p>打开终端，执行以下命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git config --global user.name ###</div><div class="line">git config --global user.email ##@##.com</div><div class="line"></div><div class="line">git config -l // 查看</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Xcode8-Warning-Couldn’t-communicate-with-a-helper-application&quot;&gt;&lt;a href=&quot;#Xcode8-Warning-Couldn’t-communicate-with-a-helper-applicati
    
    </summary>
    
    
      <category term="Xcode" scheme="http://dpruin.github.io/tags/Xcode/"/>
    
      <category term="Warning" scheme="http://dpruin.github.io/tags/Warning/"/>
    
  </entry>
  
  <entry>
    <title>iOS单元测试</title>
    <link href="http://dpruin.github.io/2016/10/18/UnitTest/"/>
    <id>http://dpruin.github.io/2016/10/18/UnitTest/</id>
    <published>2016-10-18T12:30:41.000Z</published>
    <updated>2016-11-10T09:20:27.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="iOS单元测试"><a href="#iOS单元测试" class="headerlink" title="iOS单元测试"></a>iOS单元测试</h3><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><ul>
<li>单元测试使用XCTest框架</li>
<li>单元测试的目标：模型文件</li>
<li>用处：不基于界面UI的情况下，保证模型类的逻辑正确</li>
</ul>
<h4 id="创建单元测试"><a href="#创建单元测试" class="headerlink" title="创建单元测试"></a>创建单元测试</h4><ul>
<li>File——New——Target——iOS Unit Testing Bundle</li>
<li>也可以如下图操作<br><img src="/images/unittest_1.png" alt=""></li>
</ul>
<h4 id="默认方法"><a href="#默认方法" class="headerlink" title="默认方法"></a>默认方法</h4><ul>
<li>测试用例文件名约定：以测试类名起始，添加Tests结尾, 如PersonTests.m</li>
<li>类中以test开头的方法且void返回类型的方法都会变成单元测试用例，如下</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">- (void)testAge</div><div class="line">&#123;</div><div class="line">    // 在单元测试中一定要有边界测试</div><div class="line">    Person *p = [[Person alloc] init];</div><div class="line">    p.age = 17;</div><div class="line">    XCTAssertTrue(p.age &gt;= 18, @&quot;年龄应该大于或等于18岁&quot;);</div><div class="line">    p.age = 61;</div><div class="line">    XCTAssertTrue(p.age &lt;= 60, @&quot;年龄应该小于或等于60岁&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>默认方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">// 每次测试前调用，可以在测试之前创建在test case方法中需要用到的一些对象等</div><div class="line">- (void)setUp</div><div class="line"></div><div class="line">// 每次测试结束时调用</div><div class="line">- (void)tearDown</div><div class="line"></div><div class="line">//性能测试方法，通过测试block中方法执行的时间，比对设定的标准值和偏差觉得是否可以通过测试</div><div class="line">    [self measureBlock:^&#123;</div><div class="line">        // Put the code you want to measure the time of here.</div><div class="line">        for (int i = 0; i &lt; 1000; i++) &#123;</div><div class="line">            NSLog(@&quot;时间&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;];</div></pre></td></tr></table></figure>
<h4 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">XCTAssert(expression, format...)</div><div class="line"></div><div class="line">//Bool测试:  </div><div class="line">XCTAssertTrue(expression, format...)</div><div class="line">XCTAssertFalse(expression, format...)</div><div class="line"></div><div class="line">//相等测试</div><div class="line">XCTAssertEqual(expression1, expression2, format...)</div><div class="line">XCTAssertNotEqual(expression1, expression2, format...)</div><div class="line"></div><div class="line">//double float 对比数据测试使用</div><div class="line">XCTAssertEqualWithAccuracy(expression1, expression2, accuracy, format...)</div><div class="line">XCTAssertNotEqualWithAccuracy(expression1, expression2, accuracy, format...)</div><div class="line"></div><div class="line">//Nil测试，XCTAssert[Not]Nil断言判断给定的表达式值是否为nil</div><div class="line">XCTAssertNil(expression, format...)</div><div class="line">XCTAssertNotNil(expression, format...)</div><div class="line"></div><div class="line">//失败断言     </div><div class="line">XCTFail(format...)</div></pre></td></tr></table></figure>
<h4 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h4><ul>
<li>需要在一定时间之后再进行判断的测试例，可以使用 expectationForPredicate 来对未来的状态作出假设并测试在规定的超时时间内是否得到理想的结果</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[self expectationForPredicate: 谓词 evaluatedWithObject:被测试对象 handler:nil];</div><div class="line"></div><div class="line">// 设置期望的时间</div><div class="line">[self waitForExpectationsWithTimeout:超时时间 handler: nil];</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;iOS单元测试&quot;&gt;&lt;a href=&quot;#iOS单元测试&quot; class=&quot;headerlink&quot; title=&quot;iOS单元测试&quot;&gt;&lt;/a&gt;iOS单元测试&lt;/h3&gt;&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前
    
    </summary>
    
    
      <category term="Unit Test" scheme="http://dpruin.github.io/tags/Unit-Test/"/>
    
  </entry>
  
</feed>
